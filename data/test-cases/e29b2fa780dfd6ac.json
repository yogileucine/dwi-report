{"uid":"e29b2fa780dfd6ac","name":"Test to verify least count in number parameter with linked parameter value and both verification enabled","fullName":"tests.scenarios.job.test_least_count_execution.TestLeastCount#test_execute_job_with_least_count_in_number_parameter_with_linked_parameter_value_and_both_verification_enabled","historyId":"677d8477e6d19027034900c4d6bac204","time":{"start":1734105035408,"stop":1734105049308,"duration":13900},"description":"This testcase tests that user can execute the job with least count in number parameter with linked parameter value and both verification enabled","descriptionHtml":"<p>This testcase tests that user can execute the job with least count in number parameter with linked parameter value and both verification enabled</p>\n","status":"failed","statusMessage":"AssertionError: {\"timestamp\":1734105049,\"object\":\"LIST\",\"status\":\"ERROR\",\"message\":\"error\",\"errors\":[{\"id\":\"567013882899701760\",\"userId\":null,\"userGroupId\":null,\"type\":\"bad.request\",\"code\":\"E465\",\"message\":\"Parameter verification not allowed\",\"errorInfo\":null}]}","statusTrace":"self = <test_least_count_execution.TestLeastCount object at 0x7326d4f98110>, user_group_creation = 'Auto_Test_user_group_TestLeastCount_1637', job_execution_by = 'user_group', users_list = []\n\n    @allure.title(\n        \"Test to verify least count in number parameter with linked parameter value and both verification enabled\")\n    @allure.description(\n        \"This testcase tests that user can execute the job with least count in number parameter with linked parameter \"\n        \"value and both verification enabled\")\n    @allure.link(\"https://app.clickup.com/t/86cux44hk\")\n    @pytest.mark.scenario\n    @pytest.mark.job\n    @pytest.mark.least_count\n    @pytest.mark.execute_job_with_least_count_in_number_parameter_with_linked_parameter_value_and_both_verification_enabled\n    @pytest.mark.parametrize(\"job_execution_by, users_list\", [\n        (\"user\", [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_ADMIN_USERNAME_01\")]),\n        (\"user_group\", [])])\n    def test_execute_job_with_least_count_in_number_parameter_with_linked_parameter_value_and_both_verification_enabled(\n            self, user_group_creation, job_execution_by, users_list):\n        process_data = self.least_count_obj.test_add_least_count_to_number_parameter_with_both_verifications_enabled_and_linked_parameter_value()\n        login(Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_PUBLISHER_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        self.job_obj.assign_user_and_user_group_to_process(job_execution_by, users_list, user_group_creation,\n                                                           all_task_assignmnet=True)\n        self.job_obj.create_job()\n        self.job_obj.start_job()\n        self.job_obj.start_task(task_name_01)\n        self.job_obj.execute_parameter(task_name_01, process_data[\"number_param1\"], data={\"value\": \"2\"})\n        self.job_obj.verify_self(task_name_01, process_data[\"number_param1\"])\n        validate_credentials_for_sign_off(encode_string(Env.get_env_data(\"QA_PUBLISHER_PASSWORD_01\")))\n        self.job_obj.accept_self(task_name_01, process_data[\"number_param1\"])\n        self.job_obj.assign_peer(task_name_01, process_data[\"number_param1\"],\n                                 username=[Env.get_env_data(\"QA_ADMIN_USERNAME_01\")],\n                                 job_execution_by=job_execution_by)\n        logout()\n    \n        login(Env.get_env_data(\"QA_ADMIN_USERNAME_01\"), Env.get_env_data(\"QA_ADMIN_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        self.job_obj.get_specific_job()\n        validate_credentials_for_sign_off(encode_string(Env.get_env_data(\"QA_ADMIN_PASSWORD_01\")))\n>       self.job_obj.accept_peer(task_name_01, process_data[\"number_param1\"])\n\ntests/scenarios/job/test_least_count_execution.py:588: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/unit/execution/jobs.py:908: in accept_peer\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>\nmessage = '{\"timestamp\":1734105049,\"object\":\"LIST\",\"status\":\"ERROR\",\"message\":\"error\",\"errors\":[{\"id\":\"567013882899701760\",\"user...serGroupId\":null,\"type\":\"bad.request\",\"code\":\"E465\",\"message\":\"Parameter verification not allowed\",\"errorInfo\":null}]}'\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError: {\"timestamp\":1734105049,\"object\":\"LIST\",\"status\":\"ERROR\",\"message\":\"error\",\"errors\":[{\"id\":\"567013882899701760\",\"userId\":null,\"userGroupId\":null,\"type\":\"bad.request\",\"code\":\"E465\",\"message\":\"Parameter verification not allowed\",\"errorInfo\":null}]}\n\nutil/validate_response.py:4: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env_setup","time":{"start":1734094787340,"stop":1734094787340,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"login_fixture","time":{"start":1734094787340,"stop":1734094787555,"duration":215},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1734094787556,"stop":1734094787676,"duration":120},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"select_usecase_fixture","time":{"start":1734094787676,"stop":1734094787784,"duration":108},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_to_user_id_mapping","time":{"start":1734094787784,"stop":1734094788037,"duration":253},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_group_creation","time":{"start":1734104753695,"stop":1734104754394,"duration":699},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"flush_param_counters","time":{"start":1734105035407,"stop":1734105035407,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"flush_param_counters::0","time":{"start":1734105049373,"stop":1734105049373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"execute_job_with_least_count_in_number_parameter_with_linked_parameter_value_and_both_verification_enabled"},{"name":"tag","value":"least_count"},{"name":"tag","value":"job"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.job"},{"name":"suite","value":"test_least_count_execution"},{"name":"subSuite","value":"TestLeastCount"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"590668-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.job.test_least_count_execution"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"job_execution_by","value":"'user_group'"},{"name":"users_list","value":"[]"}],"links":[{"name":"https://app.clickup.com/t/86cux44hk","url":"https://app.clickup.com/t/86cux44hk","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["execute_job_with_least_count_in_number_parameter_with_linked_parameter_value_and_both_verification_enabled","scenario","least_count","job"]},"source":"e29b2fa780dfd6ac.json","parameterValues":["'user_group'","[]"]}