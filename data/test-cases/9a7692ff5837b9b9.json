{"uid":"9a7692ff5837b9b9","name":"Test to validate activities of published prototype","fullName":"tests.scenarios.test_prototype_and_parameter.TestPrototypeAndParameter#test_validate_published_prototype_activities_details","historyId":"a5fb2427cc9fecc335aa4440991d24ac","time":{"start":1733741781900,"stop":1733741848215,"duration":66315},"description":"This test case validates view activities details of published prototype","descriptionHtml":"<p>This test case validates view activities details of published prototype</p>\n","status":"failed","statusMessage":"AssertionError: owner details not matching\nassert 'created the Prototype' in 'Kajol L (ID:L-facility.admin.03) added the Parameter \"multi_select-1\"  of type \"MULTISELECT\"  to the Task \"Task-1.1\" as Task1.1 of the Stage \"Stage-1\"'\n +  where 'created the Prototype' = const.PROTOTYPE_CREATION_INFO","statusTrace":"self = <test_prototype_and_parameter.TestPrototypeAndParameter object at 0x757cf72d1160>\n\n    @allure.title(\"Test to validate activities of published prototype\")\n    @allure.description(\"This test case validates view activities details of published prototype\")\n    @allure.link(\"https://app.clickup.com/t/85zu1yaen\")\n    @pytest.mark.scenario1234\n    @pytest.mark.validate_details_of_prototype\n    @pytest.mark.validate_published_prototype_activities_details\n    def test_validate_published_prototype_activities_details(self):\n        login(Env.get_env_data(\"QA_ADMIN_USERNAME_01\"), Env.get_env_data(\"QA_ADMIN_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n    \n        checklist_name_01 = self.test_validate_published_prototype_activities_details.__name__\n        create_new_checklist(checklist_name_01, const.USECASE_ID, const.FACILITY_ID)\n        add_stage(stage_name_01)\n        add_task(stage_name_01, task_name_01)\n    \n        data = [\"sunday\", \"saturday\", \"monday\"]\n        param = get_parameter_data(\"single_select\")\n        add_single_select_dropdown_parameter(stage_name_01, task_name_01, param, data)\n    \n        data = [\"gold\", \"silver\", \"platinum\"]\n        param = get_parameter_data(\"multi_select\")\n        add_multi_select_dropdown_parameter(stage_name_01, task_name_01, param, data)\n    \n        validate_checklist()\n        submit_checklist_for_review()\n        checklist_assignment(\n            [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_PUBLISHER_USERNAME_02\")])\n        logout()\n    \n        login(Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_PUBLISHER_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        start_checklist_review()\n        review_comment_ok()\n        logout()\n    \n        login(Env.get_env_data(\"QA_PUBLISHER_USERNAME_02\"), Env.get_env_data(\"QA_PUBLISHER_PASSWORD_02\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        start_checklist_review()\n        review_comment_ok()\n        review_submit_back()\n        logout()\n    \n        login(Env.get_env_data(\"QA_ADMIN_USERNAME_01\"), Env.get_env_data(\"QA_ADMIN_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        user = {\"reviewers\": [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\")],\n                \"approvers\": [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\")]}\n        initiate_sign_off(user)\n        sign_off_users()\n        validate_credentials_for_sign_off(encode_string(Env.get_env_data(\"QA_ADMIN_PASSWORD_01\")))\n        sign_off()\n        logout()\n    \n        login(Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_PUBLISHER_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        validate_credentials_for_sign_off(encode_string(Env.get_env_data(\"QA_PUBLISHER_PASSWORD_01\")))\n        sign_off()\n        validate_credentials_for_sign_off(encode_string(Env.get_env_data(\"QA_PUBLISHER_PASSWORD_01\")))\n        sign_off()\n        time.sleep(60)\n        publish_checklist()\n    \n        prototype_details = prototype_activities()\n        publisher_details = prototype_details['data'][0]['details']\n        published_time = prototype_details['data'][0]['triggeredAt']\n        assert const.PROTOTYPE_PUBLISHED_INFO in publisher_details, \"publisher details not matching\"\n    \n        owner_details = prototype_details['data'][1]['details']\n        created_time = prototype_details['data'][1]['triggeredAt']\n>       assert const.PROTOTYPE_CREATION_INFO in owner_details, \"owner details not matching\"\nE       AssertionError: owner details not matching\nE       assert 'created the Prototype' in 'Kajol L (ID:L-facility.admin.03) added the Parameter \"multi_select-1\"  of type \"MULTISELECT\"  to the Task \"Task-1.1\" as Task1.1 of the Stage \"Stage-1\"'\nE        +  where 'created the Prototype' = const.PROTOTYPE_CREATION_INFO\n\ntests/scenarios/test_prototype_and_parameter.py:4784: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env_setup","time":{"start":1733741781187,"stop":1733741781187,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"login_fixture","time":{"start":1733741781187,"stop":1733741781419,"duration":232},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733741781419,"stop":1733741781527,"duration":108},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"select_usecase_fixture","time":{"start":1733741781527,"stop":1733741781632,"duration":105},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_to_user_id_mapping","time":{"start":1733741781632,"stop":1733741781900,"duration":268},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"flush_param_counters","time":{"start":1733741781900,"stop":1733741781900,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"flush_param_counters::0","time":{"start":1733741848286,"stop":1733741848286,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"validate_published_prototype_activities_details"},{"name":"tag","value":"validate_details_of_prototype"},{"name":"tag","value":"scenario1234"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_prototype_and_parameter"},{"name":"subSuite","value":"TestPrototypeAndParameter"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"45463-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_prototype_and_parameter"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/85zu1yaen","url":"https://app.clickup.com/t/85zu1yaen","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["validate_details_of_prototype","scenario1234","validate_published_prototype_activities_details"]},"source":"9a7692ff5837b9b9.json","parameterValues":[]}