{"uid":"dedf7f2978702094","name":"Test to add Stage and task","fullName":"tests.scenarios.test_prototype_and_parameter.TestPrototypeAndParameter#test_add_new_stage_and_task","historyId":"b8edc09f0ab1a92d7cce1fcb075b6773","time":{"start":1733488855380,"stop":1733488857571,"duration":2191},"description":"This test case tests adding new Stage and task to checklist and publish it","descriptionHtml":"<p>This test case tests adding new Stage and task to checklist and publish it</p>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_prototype_and_parameter.TestPrototypeAndParameter object at 0x7d419593fe00>\n\n    @allure.title(\"Test to add Stage and task\")\n    @allure.description(\"This test case tests adding new Stage and task to checklist and publish it\")\n    @allure.link(\"https://app.clickup.com/t/85zttkgga\")\n    @pytest.mark.scenario1\n    @pytest.mark.create_prototype\n    @pytest.mark.add_new_stage_and_task\n    def test_add_new_stage_and_task(self):\n        login(Env.get_env_data(\"QA_ADMIN_USERNAME_01\"), Env.get_env_data(\"QA_ADMIN_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        checklist_name_01 = self.test_add_new_stage_and_task.__name__\n    \n        create_new_checklist(checklist_name_01, const.USECASE_ID, const.FACILITY_ID)\n        add_stage(stage_name_01)\n        add_task(stage_name_01, task_name_01)\n    \n        data = [\"sunday\", \"saturday\", \"monday\"]\n        single_select_param = get_parameter_data(\"single_select\")\n        add_single_select_dropdown_parameter(stage_name_01, task_name_01, single_select_param, data)\n    \n        add_task(stage_name_01, task_name_02)\n    \n        data = [\"gold\", \"silver\", \"platinum\"]\n        multi_select_param = get_parameter_data(\"multi_select\")\n        add_multi_select_dropdown_parameter(stage_name_01, task_name_02, multi_select_param, data)\n    \n        add_stage(stage_name_02)\n        add_task(stage_name_02, task_name_03)\n    \n        number_param = get_parameter_data(\"number\")\n        add_number_parameter(stage_name_02, task_name_03, number_param)\n    \n        add_task(stage_name_02, task_name_04)\n    \n        image_capture_param = get_parameter_data(\"image_capture\")\n        add_image_capture_parameter(stage_name_02, task_name_04, image_capture_param)\n    \n        signature_param = get_parameter_data(\"signature\")\n        add_signature_parameter(stage_name_02, task_name_04, signature_param)\n    \n>       validate_checklist()\n\ntests/scenarios/test_prototype_and_parameter.py:328: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests/unit/prototyping/process.py:186: in validate_checklist\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [500]>, message = ''\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError\n\nutil/validate_response.py:4: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_fixture","time":{"start":1733488854615,"stop":1733488854877,"duration":262},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"env_setup","time":{"start":1733488854615,"stop":1733488854615,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733488854877,"stop":1733488855000,"duration":123},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"select_usecase_fixture","time":{"start":1733488855000,"stop":1733488855111,"duration":111},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_to_user_id_mapping","time":{"start":1733488855111,"stop":1733488855380,"duration":269},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"flush_param_counters","time":{"start":1733488855380,"stop":1733488855380,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"flush_param_counters::0","time":{"start":1733488857651,"stop":1733488857651,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"add_new_stage_and_task"},{"name":"tag","value":"create_prototype"},{"name":"tag","value":"scenario1"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_prototype_and_parameter"},{"name":"subSuite","value":"TestPrototypeAndParameter"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"27062-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_prototype_and_parameter"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/85zttkgga","url":"https://app.clickup.com/t/85zttkgga","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["create_prototype","add_new_stage_and_task","scenario1"]},"source":"dedf7f2978702094.json","parameterValues":[]}