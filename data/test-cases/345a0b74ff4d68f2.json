{"uid":"345a0b74ff4d68f2","name":"Test to add Create Object action type with multi select dropdown mapping with load options","fullName":"tests.scenarios.test_multi_select_load_options.TestMultiSelectDropdownOptions#test_add_create_object_action_type_with_multi_select_dropdown_mapping_with_load_options","historyId":"8968a14eb4a234c776dbedb49620c021","time":{"start":1733748786881,"stop":1733748798063,"duration":11182},"description":"These testcase test adding Create Object action type with multi select dropdown mapping with load options","descriptionHtml":"<p>These testcase test adding Create Object action type with multi select dropdown mapping with load options</p>\n","status":"failed","statusMessage":"AssertionError: {\"object\":\"LIST\", \"status\":\"422 UNPROCESSABLE_ENTITY\", \"message\":\"ERROR\", \"timestamp\":\"1733748798\", \"data\":null, \"errors\":[{\"timestamp\":\"1733748798\", \"code\":\"101000\", \"field\":\"null\", \"message\":\"Unknown error.\", \"ignore\":\"could not extract ResultSet\"}]}","statusTrace":"self = <test_multi_select_load_options.TestMultiSelectDropdownOptions object at 0x79c71f57dd30>\n\n    @allure.title(\"Test to add Create Object action type with multi select dropdown mapping with load options\")\n    @allure.description(\"These testcase test adding Create Object action type with multi select dropdown mapping with \"\n                        \"load options\")\n    @allure.link(\"https://app.clickup.com/t/86cvf7rg5\")\n    @pytest.mark.scenario\n    @pytest.mark.create_prototype\n    @pytest.mark.task_action_automations\n    @pytest.mark.add_create_object_action_type_with_multi_select_dropdown_mapping_with_load_options\n    def test_add_create_object_action_type_with_multi_select_dropdown_mapping_with_load_options(self):\n        properties = object_type_with_properties.test_create_object_type_properties()\n        login(Env.get_env_data(\"QA_ADMIN_USERNAME_01\"), Env.get_env_data(\"QA_ADMIN_PASSWORD_01\"))\n        checklist_name_01 = self.test_add_create_object_action_type_with_multi_select_dropdown_mapping_with_load_options.__name__\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n    \n        create_new_checklist(checklist_name_01, const.USECASE_ID, const.FACILITY_ID)\n        add_stage(stage_name_01)\n        add_task(stage_name_01, task_name_01)\n    \n        load_data = {\"object_type_name\": properties[\"display_name\"],\n                     \"property_name\": properties[\"multi_select_property\"]}\n        multi_select_param = get_parameter_data(\"multi_select\")\n        add_multi_select_dropdown_parameter(stage_name_01, task_name_01, multi_select_param, data=None,\n                                            load_options=load_data)\n    \n        add_task(stage_name_01, task_name_02)\n        image_param = get_parameter_data(\"image_capture\")\n        add_image_capture_parameter(stage_name_01, task_name_02, image_param)\n    \n        data = {\"label\": \"Action-01\", \"trigger\": Trigger.TASK_COMPLETED.value,\n                \"action\": Action_type.CREATE_OBJECT.value, \"object_type\": properties[\"display_name\"]}\n        configurations = {properties[\"multi_select_property\"]: multi_select_param[\"label\"]}\n        configure_actions(stage_name_01, task_name_01, data, configurations=configurations)\n        data_start = {\"label\": \"Action-01\", \"trigger\": Trigger.TASK_STARTED.value,\n                      \"action\": Action_type.CREATE_OBJECT.value, \"object_type\": properties[\"display_name\"]}\n        configure_actions(stage_name_01, task_name_02, data_start, configurations=configurations)\n        validate_checklist()\n        submit_checklist_for_review()\n        checklist_assignment(\n            [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_PUBLISHER_USERNAME_02\")])\n>       review_sign_off_and_publish_prototype(\"QA_ADMIN_USERNAME_01\", \"QA_PUBLISHER_USERNAME_01\",\n                                              \"QA_PUBLISHER_USERNAME_02\")\n\ntests/scenarios/test_multi_select_load_options.py:131: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests/unit/prototyping/process.py:569: in review_sign_off_and_publish_prototype\n    sign_off()\ntests/unit/prototyping/process.py:361: in sign_off\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [422]>\nmessage = '{\"object\":\"LIST\", \"status\":\"422 UNPROCESSABLE_ENTITY\", \"message\":\"ERROR\", \"timestamp\":\"1733748798\", \"data\":null, \"err...\":\"1733748798\", \"code\":\"101000\", \"field\":\"null\", \"message\":\"Unknown error.\", \"ignore\":\"could not extract ResultSet\"}]}'\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError: {\"object\":\"LIST\", \"status\":\"422 UNPROCESSABLE_ENTITY\", \"message\":\"ERROR\", \"timestamp\":\"1733748798\", \"data\":null, \"errors\":[{\"timestamp\":\"1733748798\", \"code\":\"101000\", \"field\":\"null\", \"message\":\"Unknown error.\", \"ignore\":\"could not extract ResultSet\"}]}\n\nutil/validate_response.py:4: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_fixture","time":{"start":1733747083130,"stop":1733747083334,"duration":204},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"env_setup","time":{"start":1733747083130,"stop":1733747083130,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733747083334,"stop":1733747083435,"duration":101},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"select_usecase_fixture","time":{"start":1733747083436,"stop":1733747083532,"duration":96},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_to_user_id_mapping","time":{"start":1733747083532,"stop":1733747083747,"duration":215},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"flush_param_counters","time":{"start":1733748786881,"stop":1733748786881,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"flush_param_counters::0","time":{"start":1733748798077,"stop":1733748798077,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"add_create_object_action_type_with_multi_select_dropdown_mapping_with_load_options"},{"name":"tag","value":"task_action_automations"},{"name":"tag","value":"create_prototype"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios"},{"name":"suite","value":"test_multi_select_load_options"},{"name":"subSuite","value":"TestMultiSelectDropdownOptions"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"49291-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.test_multi_select_load_options"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/86cvf7rg5","url":"https://app.clickup.com/t/86cvf7rg5","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["create_prototype","scenario","task_action_automations","add_create_object_action_type_with_multi_select_dropdown_mapping_with_load_options"]},"source":"345a0b74ff4d68f2.json","parameterValues":[]}