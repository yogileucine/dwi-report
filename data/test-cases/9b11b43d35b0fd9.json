{"uid":"9b11b43d35b0fd9","name":"Test to validate error message that the user who didn't start the task should not be able to execute the task with solo task lock","fullName":"tests.scenarios.job.test_solo_task_lock_execution.TestSoloTaskLockExecution#test_validate_user_cannot_execute_task_with_solo_task_lock","historyId":"d7e648d94cea62454ca68e2bc0bfd5d5","time":{"start":1733765135278,"stop":1733765146665,"duration":11387},"description":"This testcase tests that user who didn't start the task should not be able to execute the task with solo task","descriptionHtml":"<p>This testcase tests that user who didn't start the task should not be able to execute the task with solo task</p>\n","status":"failed","statusMessage":"AssertionError: Task is executed by user who didn't start the task","statusTrace":"self = <test_solo_task_lock_execution.TestSoloTaskLockExecution object at 0x7b6d60b6f6b0>, job_execution_by = 'user_group', users_list = [], user_group_creation = 'Auto_Test_user_group_TestSoloTaskLockExecution_1143'\n\n    @allure.title(\n        \"Test to validate error message that the user who didn't start the task should not be able to execute the task \"\n        \"with solo task lock\")\n    @allure.description(\n        \"This testcase tests that user who didn't start the task should not be able to execute the task with solo task\")\n    @allure.link(\"https://app.clickup.com/t/86cv0hver\")\n    @pytest.mark.scenario\n    @pytest.mark.job\n    @pytest.mark.solo_task_lock\n    @pytest.mark.parametrize(\"job_execution_by, users_list\", [(\"user\", [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"),\n                                                                        Env.get_env_data(\"QA_ADMIN_USERNAME_01\")]),\n                                                              (\"user_group\", [])])\n    def test_validate_user_cannot_execute_task_with_solo_task_lock(self, job_execution_by, users_list,\n                                                                   user_group_creation):\n        process_data = self.solo_task_lock_obj.test_add_solo_task_lock()\n        login(Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_PUBLISHER_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        self.job_obj.assign_user_and_user_group_to_process(job_execution_by, users_list, user_group_creation,\n                                                           all_task_assignmnet=True)\n        self.job_obj.create_job()\n        self.job_obj.start_job()\n        self.job_obj.start_task(task_name_01)\n        logout()\n    \n        login(Env.get_env_data(\"QA_ADMIN_USERNAME_01\"), Env.get_env_data(\"QA_ADMIN_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        self.job_obj.get_specific_job()\n        error_message = self.job_obj.execute_parameter(task_name_01, process_data[\"image_capture\"], data=None,\n                                                       negative_testcase=True)\n        if not error_message.startswith(\"This task is currently in progress and has been locked for solo execution by\"):\n>           raise AssertionError(\"Task is executed by user who didn't start the task\")\nE           AssertionError: Task is executed by user who didn't start the task\n\ntests/scenarios/job/test_solo_task_lock_execution.py:415: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"env_setup","time":{"start":1733752687376,"stop":1733752687376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"login_fixture","time":{"start":1733752687376,"stop":1733752687642,"duration":266},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733752687642,"stop":1733752687801,"duration":159},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"select_usecase_fixture","time":{"start":1733752687801,"stop":1733752687918,"duration":117},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_to_user_id_mapping","time":{"start":1733752687918,"stop":1733752688451,"duration":533},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_group_creation","time":{"start":1733764884004,"stop":1733764884665,"duration":661},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"flush_param_counters","time":{"start":1733765135278,"stop":1733765135278,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"flush_param_counters::0","time":{"start":1733765146671,"stop":1733765146671,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"solo_task_lock"},{"name":"tag","value":"job"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.job"},{"name":"suite","value":"test_solo_task_lock_execution"},{"name":"subSuite","value":"TestSoloTaskLockExecution"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"53959-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.job.test_solo_task_lock_execution"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"job_execution_by","value":"'user_group'"},{"name":"users_list","value":"[]"}],"links":[{"name":"https://app.clickup.com/t/86cv0hver","url":"https://app.clickup.com/t/86cv0hver","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5951d86bb7516f2d","status":"failed","statusDetails":"AssertionError: Task is executed by user who didn't start the task","time":{"start":1733502556402,"stop":1733502567489,"duration":11087}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["scenario","solo_task_lock","job"]},"source":"9b11b43d35b0fd9.json","parameterValues":["'user_group'","[]"]}