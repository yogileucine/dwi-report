{"uid":"d228622e798f574a","name":"Test to verify that user can initiate the exception approval workflow for number parameter with resource type validation and view the exception from the banner on the job","fullName":"tests.scenarios.job.test_resource_parameter_exception_management_execution.TestResourceParameterExceptionManagementExecution#test_exception_approval_workflow_on_resource_type_validation_and_view_exception_from_banner","historyId":"80cce69d34ca8317c7b645d399b68323","time":{"start":1733501749167,"stop":1733501756404,"duration":7237},"description":"This test case validates that user can initiate the exception approval workflow for number parameter with resource type validation and view the exception from the banner on the job","descriptionHtml":"<p>This test case validates that user can initiate the exception approval workflow for number parameter with resource type validation and view the exception from the banner on the job</p>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_resource_parameter_exception_management_execution.TestResourceParameterExceptionManagementExecution object at 0x7af822093470>\nuser_group_creation = 'Auto_Test_user_group_TestResourceParameterExceptionManagementExecution_1836', job_execution_by = 'user_group', users_list = []\n\n    @allure.title(\n        \"Test to verify that user can initiate the exception approval workflow for number parameter with resource \"\n        \"type validation and view the exception from the banner on the job\")\n    @allure.description(\n        \"This test case validates that user can initiate the exception approval workflow for number parameter with \"\n        \"resource type validation and view the exception from the banner on the job\")\n    @allure.link(\"https://app.clickup.com/t/86cw1d3he\")\n    @pytest.mark.scenario\n    @pytest.mark.job\n    @pytest.mark.exception_management_workflow\n    @pytest.mark.exception_approval_workflow_on_resource_type_validation_and_view_exception_from_banner\n    @pytest.mark.parametrize(\"job_execution_by, users_list\", [\n        (\"user\", [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_PUBLISHER_USERNAME_02\")]),\n        (\"user_group\", [])])\n    def test_exception_approval_workflow_on_resource_type_validation_and_view_exception_from_banner(self,\n                                                                                                    user_group_creation,\n                                                                                                    job_execution_by,\n                                                                                                    users_list):\n>       process_data = self.process_obj.test_add_number_parameter_with_resource_type_validation_enabled_approval_flow_exception_workflow()\n\ntests/scenarios/job/test_resource_parameter_exception_management_execution.py:621: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/scenarios/test_number_parameter_exception_management.py:145: in test_add_number_parameter_with_resource_type_validation_enabled_approval_flow_exception_workflow\n    validate_checklist()\ntests/unit/prototyping/process.py:186: in validate_checklist\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, message = ''\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError\n\nutil/validate_response.py:4: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env_setup","time":{"start":1733490527832,"stop":1733490527832,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"login_fixture","time":{"start":1733490527832,"stop":1733490528079,"duration":247},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733490528079,"stop":1733490528284,"duration":205},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"select_usecase_fixture","time":{"start":1733490528284,"stop":1733490528542,"duration":258},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_to_user_id_mapping","time":{"start":1733490528542,"stop":1733490529001,"duration":459},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_group_creation","time":{"start":1733501629720,"stop":1733501630386,"duration":666},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"flush_param_counters","time":{"start":1733501749167,"stop":1733501749167,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"flush_param_counters::0","time":{"start":1733501756424,"stop":1733501756424,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"exception_approval_workflow_on_resource_type_validation_and_view_exception_from_banner"},{"name":"tag","value":"exception_management_workflow"},{"name":"tag","value":"job"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.job"},{"name":"suite","value":"test_resource_parameter_exception_management_execution"},{"name":"subSuite","value":"TestResourceParameterExceptionManagementExecution"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"29333-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.job.test_resource_parameter_exception_management_execution"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"job_execution_by","value":"'user_group'"},{"name":"users_list","value":"[]"}],"links":[{"name":"https://app.clickup.com/t/86cw1d3he","url":"https://app.clickup.com/t/86cw1d3he","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["exception_approval_workflow_on_resource_type_validation_and_view_exception_from_banner","scenario","job","exception_management_workflow"]},"source":"d228622e798f574a.json","parameterValues":["'user_group'","[]"]}