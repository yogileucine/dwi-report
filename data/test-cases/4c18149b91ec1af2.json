{"uid":"4c18149b91ec1af2","name":"Test to verify that the Set relation Task Actions works as expected during execution at completion","fullName":"tests.scenarios.job.test_task_automation_actions.TestTaskAutomationActions#test_set_relation_task_action_triggered_at_completion_of_task","historyId":"dfd035f1d532cd1d621a3d3c73b83f29","time":{"start":1734108705527,"stop":1734108726644,"duration":21117},"description":"This testcase tests if Set relation task actions added on task gets triggered at completion of the task during job execution","descriptionHtml":"<p>This testcase tests if Set relation task actions added on task gets triggered at completion of the task during job execution</p>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_task_automation_actions.TestTaskAutomationActions object at 0x7326d4d21970>, user_group_creation = 'Auto_Test_user_group_TestTaskAutomationActions_900', job_execution_by = 'user_group', users_list = []\n\n    @allure.title(\"Test to verify that the Set relation Task Actions works as expected during execution at completion\")\n    @allure.description(\"This testcase tests if Set relation task actions added on task gets triggered at \"\n                        \"completion of the task during job execution\")\n    @allure.link(\"https://app.clickup.com/t/86cujpre3\")\n    @pytest.mark.scenario\n    @pytest.mark.job\n    @pytest.mark.set_relation_task_action_triggered_at_completion_of_task\n    @pytest.mark.parametrize(\"job_execution_by, users_list\", [(\"user\", [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\")]),\n                                                              (\"user_group\", [])])\n    def test_set_relation_task_action_triggered_at_completion_of_task(self, user_group_creation, job_execution_by,\n                                                                      users_list):\n        process_data = self.process_obj.test_add_set_relation_action_type_at_completion_of_task()\n        object_data_02, display_name = object_type_objects.test_create_objects(\n            {process_data[\"properties_02\"][\"title_display_name\"]: \"object-02\",\n             process_data[\"properties_02\"][\"single_line_property\"]: \"single_line\",\n             process_data[\"properties_02\"][\"multi_line_property\"]: \"multi_line\",\n             process_data[\"properties_02\"][\"number_property\"]: \"02\",\n             process_data[\"properties_02\"][\"multi_select_property\"]: [\n                 process_data[\"properties_02\"][\"multi_select_option\"]],\n             process_data[\"properties_02\"][\"single_select_property\"]: process_data[\"properties_02\"][\n                 \"single_select_option\"],\n             process_data[\"properties_02\"][\"date_property\"]: \"12-12-2012\",\n             process_data[\"properties_02\"][\"date_time_property\"]: datetime.now().strftime(\"%d-%m-%Y %H:%M\")},\n            process_data[\"properties_02\"][\"display_name\"])\n    \n>       object_data_01, display_name = object_type_objects.test_create_objects(\n            {process_data[\"properties_01\"][\"title_display_name\"]: \"object_01\",\n             process_data[\"properties_01\"][\"single_line_property\"]: \"single_line\",\n             process_data[\"properties_01\"][\"multi_line_property\"]: \"multi_line\",\n             process_data[\"properties_01\"][\"number_property\"]: \"01\",\n             process_data[\"properties_01\"][\"multi_select_property\"]: [\n                 process_data[\"properties_01\"][\"multi_select_option\"]],\n             process_data[\"properties_01\"][\"single_select_property\"]: process_data[\"properties_01\"][\n                 \"single_select_option\"],\n             process_data[\"properties_01\"][\"date_property\"]: \"12-12-2012\",\n             process_data[\"properties_01\"][\"date_time_property\"]: datetime.now().strftime(\"%d-%m-%Y %H:%M\"),\n             process_data[\"relation_name\"]: object_data_02[\"displayName\"]},\n            process_data[\"properties_01\"][\"display_name\"], False)\n\ntests/scenarios/job/test_task_automation_actions.py:1167: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/scenarios/ontology/test_object.py:39: in test_create_objects\n    response = create_objects(display_name, objects_inputs, random_data, reason)\ntests/unit/ontology/objects.py:158: in create_objects\n    if not status_200(response):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, message = ''\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError\n\nutil/validate_response.py:4: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env_setup","time":{"start":1734094787340,"stop":1734094787340,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"login_fixture","time":{"start":1734094787340,"stop":1734094787555,"duration":215},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1734094787556,"stop":1734094787676,"duration":120},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"select_usecase_fixture","time":{"start":1734094787676,"stop":1734094787784,"duration":108},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_to_user_id_mapping","time":{"start":1734094787784,"stop":1734094788037,"duration":253},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_group_creation","time":{"start":1734107713241,"stop":1734107713912,"duration":671},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"flush_param_counters","time":{"start":1734108705527,"stop":1734108705527,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"flush_param_counters::0","time":{"start":1734108726746,"stop":1734108726746,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"set_relation_task_action_triggered_at_completion_of_task"},{"name":"tag","value":"job"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.job"},{"name":"suite","value":"test_task_automation_actions"},{"name":"subSuite","value":"TestTaskAutomationActions"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"590668-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.job.test_task_automation_actions"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"job_execution_by","value":"'user_group'"},{"name":"users_list","value":"[]"}],"links":[{"name":"https://app.clickup.com/t/86cujpre3","url":"https://app.clickup.com/t/86cujpre3","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["scenario","job","set_relation_task_action_triggered_at_completion_of_task"]},"source":"4c18149b91ec1af2.json","parameterValues":["'user_group'","[]"]}