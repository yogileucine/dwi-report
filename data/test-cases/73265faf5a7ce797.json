{"uid":"73265faf5a7ce797","name":"This test case is to verify when any of the fields in the Create Object type form are empty","fullName":"tests.scenarios.ontology.test_object_types#test_object_type_mandatory_fields","historyId":"4413c2b0209c7b5afab22cd8c7d81577","time":{"start":1733735184032,"stop":1733735184429,"duration":397},"description":"This test case is to verify object type will not be created when any of the fields in the Create Object type form are empty","descriptionHtml":"<p>This test case is to verify object type will not be created when any of the fields in the Create Object type form are empty</p>\n","status":"failed","statusMessage":"AssertionError: {\"timestamp\":1733735184,\"object\":\"LIST\",\"status\":\"ERROR\",\"message\":\"error\",\"errors\":[{\"id\":null,\"userId\":null,\"userGroupId\":null,\"type\":\"bad.request\",\"code\":\"E9001\",\"message\":\"A resource with the same unique identifier already exists\",\"errorInfo\":null}]}","statusTrace":"@allure.title(\"This test case is to verify when any of the fields in the Create Object \"\n                  \"type form are empty\")\n    @allure.description(\"This test case is to verify object type will not be created when any of the fields in the Create\"\n                        \" Object type form are empty\")\n    @allure.link(\"https://app.clickup.com/t/85ztqaw6y\")\n    @pytest.mark.scenario12\n    @pytest.mark.ontology\n    @pytest.mark.object_type_mandatory_fields\n    def test_object_type_mandatory_fields():\n        login(Env.get_env_data(\"QA_GLOBAL_ADMIN_USERNAME_01\"), Env.get_env_data(\"QA_GLOBAL_ADMIN_PASSWORD_01\"))\n        display_name = generate_string(\"object_type_display_name\")\n        plural_name = generate_string(\"object_type_plural_name\")\n        title_property_display_name = generate_string(\"title_property_display_name\")\n        identifier_property_display_name = generate_string(\"identifier_property_display_name\")\n        response = create_object_types(\"\", plural_name, title_property_display_name, identifier_property_display_name)\n        status_400(response)\n        response = create_object_types(display_name, \"\", title_property_display_name, identifier_property_display_name)\n>       status_400(response)\n\ntests/scenarios/ontology/test_object_types.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [409]>\nmessage = '{\"timestamp\":1733735184,\"object\":\"LIST\",\"status\":\"ERROR\",\"message\":\"error\",\"errors\":[{\"id\":null,\"userId\":null,\"userGr...\"bad.request\",\"code\":\"E9001\",\"message\":\"A resource with the same unique identifier already exists\",\"errorInfo\":null}]}'\n\n    def status_400(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 400, response.text\nE       AssertionError: {\"timestamp\":1733735184,\"object\":\"LIST\",\"status\":\"ERROR\",\"message\":\"error\",\"errors\":[{\"id\":null,\"userId\":null,\"userGroupId\":null,\"type\":\"bad.request\",\"code\":\"E9001\",\"message\":\"A resource with the same unique identifier already exists\",\"errorInfo\":null}]}\n\nutil/validate_response.py:10: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"login_fixture","time":{"start":1733735075880,"stop":1733735076109,"duration":229},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"env_setup","time":{"start":1733735075880,"stop":1733735075880,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733735076109,"stop":1733735076219,"duration":110},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"select_usecase_fixture","time":{"start":1733735076219,"stop":1733735076317,"duration":98},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_to_user_id_mapping","time":{"start":1733735076317,"stop":1733735076546,"duration":229},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"flush_param_counters","time":{"start":1733735184032,"stop":1733735184032,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"flush_param_counters::0","time":{"start":1733735184432,"stop":1733735184432,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"object_type_mandatory_fields"},{"name":"tag","value":"ontology"},{"name":"tag","value":"scenario12"},{"name":"parentSuite","value":"tests.scenarios.ontology"},{"name":"suite","value":"test_object_types"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"20301-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.ontology.test_object_types"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/85ztqaw6y","url":"https://app.clickup.com/t/85ztqaw6y","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["scenario12","object_type_mandatory_fields","ontology"]},"source":"73265faf5a7ce797.json","parameterValues":[]}