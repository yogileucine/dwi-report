{"uid":"4e137878338c6562","name":"Test to verify that the Set Property Task Actions works as expected during execution","fullName":"tests.scenarios.job.test_task_automation_actions.TestTaskAutomationActions#test_set_property_task_action_with_multi_resource_triggered_at_completion_of_task","historyId":"992eb0b6e064f3a4cec4f9122b1d26bd","time":{"start":1733941663673,"stop":1733941689046,"duration":25373},"description":"This testcase tests if set property task actions with multi resource added on task gets triggered at completion of the task during job execution","descriptionHtml":"<p>This testcase tests if set property task actions with multi resource added on task gets triggered at completion of the task during job execution</p>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_task_automation_actions.TestTaskAutomationActions object at 0x78cf7c2c6d50>, user_group_creation = 'Auto_Test_user_group_TestTaskAutomationActions_1279', job_execution_by = 'user_group', users_list = []\n\n    @allure.title(\"Test to verify that the Set Property Task Actions works as expected during execution\")\n    @allure.description(\n        \"This testcase tests if set property task actions with multi resource added on task gets triggered at \"\n        \"completion of the task during job execution\")\n    @allure.link(\"https://app.clickup.com/t/86cupakxf\")\n    @pytest.mark.scenario\n    @pytest.mark.job\n    @pytest.mark.set_property_task_action_with_multi_resource_triggered_at_completion_of_task\n    @pytest.mark.parametrize(\"job_execution_by, users_list\", [(\"user\", [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\")]),\n                                                              (\"user_group\", [])])\n    def test_set_property_task_action_with_multi_resource_triggered_at_completion_of_task(self, user_group_creation,\n                                                                                          job_execution_by, users_list):\n        process_data = self.multi_resource_process.test_set_property_action_type_at_completion_with_multi_resource()\n        object_data, display_name = object_type_objects.test_create_objects(\n            {process_data[\"properties\"][\"title_display_name\"]: \"Object-01\",\n             process_data[\"properties\"][\"single_line_property\"]: \"single_line\",\n             process_data[\"properties\"][\"multi_line_property\"]: \"multi_line\",\n             process_data[\"properties\"][\"number_property\"]: \"10\",\n             process_data[\"properties\"][\"multi_select_property\"]: [\n                 process_data[\"properties\"][\"multi_select_option_02\"]],\n             process_data[\"properties\"][\"single_select_property\"]: process_data[\"properties\"][\n                 \"single_select_option_02\"],\n             process_data[\"properties\"][\"date_property\"]: \"12-12-2012\",\n             process_data[\"properties\"][\"date_time_property\"]: datetime.now().strftime(\"%d-%m-%Y %H:%M\")},\n            process_data[\"properties\"][\"display_name\"])\n    \n        login(Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_PUBLISHER_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        self.job_obj.assign_user_and_user_group_to_process(job_execution_by, users_list, user_group_creation,\n                                                           all_task_assignmnet=True)\n        self.job_obj.create_job()\n    \n        self.job_obj.start_job()\n        self.job_obj.start_task(task_name_01)\n        self.job_obj.execute_parameter(task_name_01, process_data[\"res_param\"],\n                                       data={\"value\": object_data[\"displayName\"]})\n        self.job_obj.execute_parameter(task_name_01, process_data[\"number_param\"], data={\"value\": \"20\"})\n        # self.job_obj.execute_parameter(task_name_01, process_data[\"should_be_param\"], data={\"value\": \"50\"})\n>       self.job_obj.complete_task(task_name_01)\n\ntests/scenarios/job/test_task_automation_actions.py:1860: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/unit/execution/jobs.py:679: in complete_task\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, message = ''\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError\n\nutil/validate_response.py:4: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"env_setup","time":{"start":1733926201392,"stop":1733926201392,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"login_fixture","time":{"start":1733926201392,"stop":1733926201601,"duration":209},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733926201601,"stop":1733926201720,"duration":119},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"select_usecase_fixture","time":{"start":1733926201720,"stop":1733926201814,"duration":94},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_to_user_id_mapping","time":{"start":1733926201814,"stop":1733926202088,"duration":274},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_group_creation","time":{"start":1733939992512,"stop":1733939993160,"duration":648},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"flush_param_counters","time":{"start":1733941663672,"stop":1733941663672,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"flush_param_counters::0","time":{"start":1733941689098,"stop":1733941689098,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"set_property_task_action_with_multi_resource_triggered_at_completion_of_task"},{"name":"tag","value":"job"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.job"},{"name":"suite","value":"test_task_automation_actions"},{"name":"subSuite","value":"TestTaskAutomationActions"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"60865-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.job.test_task_automation_actions"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"job_execution_by","value":"'user_group'"},{"name":"users_list","value":"[]"}],"links":[{"name":"https://app.clickup.com/t/86cupakxf","url":"https://app.clickup.com/t/86cupakxf","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3ff002da99d01d58","status":"failed","statusDetails":"AssertionError","time":{"start":1733766688549,"stop":1733766714737,"duration":26188}},{"uid":"5ed012413f7ad69","status":"failed","statusDetails":"AssertionError","time":{"start":1733503850445,"stop":1733503875242,"duration":24797}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["set_property_task_action_with_multi_resource_triggered_at_completion_of_task","scenario","job"]},"source":"4e137878338c6562.json","parameterValues":["'user_group'","[]"]}