{"uid":"e5339a50ec9c07fb","name":"This test case is to Verify that user cannot create object while passing empty fields","fullName":"tests.scenarios.ontology.test_object#test_create_objects_empty_fields","historyId":"928526f9af8206837c2216f33e9a04ee","time":{"start":1733505143817,"stop":1733505146493,"duration":2676},"description":"This test case is to Verify that user cannot create object while passing empty fields for mandatory inputs","descriptionHtml":"<p>This test case is to Verify that user cannot create object while passing empty fields for mandatory inputs</p>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"@allure.title(\"This test case is to Verify that user cannot create object while passing empty fields\")\n    @allure.description(\"This test case is to Verify that user cannot create object while passing empty fields for\"\n                        \" mandatory inputs\")\n    @allure.link(\"https://app.clickup.com/t/85zty2auu\")\n    @pytest.mark.scenario\n    @pytest.mark.ontology\n    @pytest.mark.create_objects_empty_fields\n    def test_create_objects_empty_fields():\n        display_name = object_types()\n        login(Env.get_env_data(\"QA_GLOBAL_ADMIN_USERNAME_01\"), Env.get_env_data(\"QA_GLOBAL_ADMIN_PASSWORD_01\"))\n        input_type = \"SINGLE_LINE\"\n        property_display_name = generate_string(\"single_line_text_property\")\n        create_property_type(display_name, property_display_name, input_type)\n        verify_object_property(display_name, property_display_name)\n        logout()\n        login(Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_PUBLISHER_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        properties_data = get_object_properties(display_name)\n        title_display_name = properties_data[0][\"display_name\"]\n        ident_display_name = properties_data[1][\"display_name\"]\n        input_data_objects = {\n            property_display_name: None,\n            title_display_name: None,\n            ident_display_name: None\n    \n        }\n        properties = get_object_properties(display_name)\n        objects_inputs = get_object_data(properties, input_data_objects)\n>       response = create_objects(display_name, objects_inputs, is_random_data = False)\n\ntests/scenarios/ontology/test_object.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/unit/ontology/objects.py:158: in create_objects\n    if not status_200(response):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, message = ''\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError\n\nutil/validate_response.py:4: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env_setup","time":{"start":1733490527832,"stop":1733490527832,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"login_fixture","time":{"start":1733490527832,"stop":1733490528079,"duration":247},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733490528079,"stop":1733490528284,"duration":205},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"select_usecase_fixture","time":{"start":1733490528284,"stop":1733490528542,"duration":258},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_to_user_id_mapping","time":{"start":1733490528542,"stop":1733490529001,"duration":459},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"flush_param_counters","time":{"start":1733505143817,"stop":1733505143817,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"flush_param_counters::0","time":{"start":1733505146530,"stop":1733505146530,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"create_objects_empty_fields"},{"name":"tag","value":"ontology"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.ontology"},{"name":"suite","value":"test_object"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"29333-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.ontology.test_object"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/85zty2auu","url":"https://app.clickup.com/t/85zty2auu","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["create_objects_empty_fields","scenario","ontology"]},"source":"e5339a50ec9c07fb.json","parameterValues":[]}