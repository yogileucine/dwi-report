{"uid":"1da8d0765df448d0","name":"Test to verify that user can complete the job by approving the criteria type validation exception","fullName":"tests.scenarios.job.test_number_parameter_exception_management_execution.TestNumberParameterExceptionManagementExecution#test_validate_job_completion_on_criteria_type_validation_with_constant_value","historyId":"dae2c64775977a116cab9bb619fae40b","time":{"start":1733499668818,"stop":1733499669833,"duration":1015},"description":"This test case validates that user can complete the job by approving the exception for criteria type validation with constant value","descriptionHtml":"<p>This test case validates that user can complete the job by approving the exception for criteria type validation with constant value</p>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_number_parameter_exception_management_execution.TestNumberParameterExceptionManagementExecution object at 0x7af8221a5520>\nuser_group_creation = 'Auto_Test_user_group_TestNumberParameterExceptionManagementExecution_760', job_execution_by = 'user', users_list = ['process.publisher.03', 'process.publisher.04']\n\n    @allure.title(\"Test to verify that user can complete the job by approving the criteria type validation exception\")\n    @allure.description(\n        \"This test case validates that user can complete the job by approving the exception for criteria type \"\n        \"validation with constant value\")\n    @allure.link(\"https://app.clickup.com/t/86cvhdu5y\")\n    @pytest.mark.scenario\n    @pytest.mark.job\n    @pytest.mark.exception_management_workflow\n    @pytest.mark.validate_job_completion_on_criteria_type_validation_with_constant_value\n    @pytest.mark.parametrize(\"job_execution_by, users_list\", [\n        (\"user\", [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_PUBLISHER_USERNAME_02\")])])\n    def test_validate_job_completion_on_criteria_type_validation_with_constant_value(self, user_group_creation,\n                                                                                     job_execution_by, users_list):\n>       process_data = self.process_obj.test_add_number_parameter_with_criteria_type_validation_enabled_approval_flow_condition_and_constant_value()\n\ntests/scenarios/job/test_number_parameter_exception_management_execution.py:205: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/scenarios/test_number_parameter_exception_management.py:259: in test_add_number_parameter_with_criteria_type_validation_enabled_approval_flow_condition_and_constant_value\n    validate_checklist()\ntests/unit/prototyping/process.py:186: in validate_checklist\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, message = ''\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError\n\nutil/validate_response.py:4: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env_setup","time":{"start":1733490527832,"stop":1733490527832,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"login_fixture","time":{"start":1733490527832,"stop":1733490528079,"duration":247},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733490528079,"stop":1733490528284,"duration":205},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"select_usecase_fixture","time":{"start":1733490528284,"stop":1733490528542,"duration":258},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_to_user_id_mapping","time":{"start":1733490528542,"stop":1733490529001,"duration":459},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_group_creation","time":{"start":1733499663409,"stop":1733499664045,"duration":636},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"flush_param_counters","time":{"start":1733499668818,"stop":1733499668818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"flush_param_counters::0","time":{"start":1733499669850,"stop":1733499669850,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"validate_job_completion_on_criteria_type_validation_with_constant_value"},{"name":"tag","value":"exception_management_workflow"},{"name":"tag","value":"job"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.job"},{"name":"suite","value":"test_number_parameter_exception_management_execution"},{"name":"subSuite","value":"TestNumberParameterExceptionManagementExecution"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"29333-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.job.test_number_parameter_exception_management_execution"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"job_execution_by","value":"'user'"},{"name":"users_list","value":"['process.publisher.03', 'process.publisher.04']"}],"links":[{"name":"https://app.clickup.com/t/86cvhdu5y","url":"https://app.clickup.com/t/86cvhdu5y","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["validate_job_completion_on_criteria_type_validation_with_constant_value","scenario","job","exception_management_workflow"]},"source":"1da8d0765df448d0.json","parameterValues":["'user'","['process.publisher.03', 'process.publisher.04']"]}