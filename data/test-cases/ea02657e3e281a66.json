{"uid":"ea02657e3e281a66","name":"This test case is to verify that object type  display names having unique names to create object type","fullName":"tests.scenarios.ontology.test_object_types#test_object_types_unique_display_names","historyId":"e5a1069a29b6e01b3c220bc15ec2ee1a","time":{"start":1733505272972,"stop":1733505273504,"duration":532},"description":"This test case is to verify the object type display names having unique names to create object type","descriptionHtml":"<p>This test case is to verify the object type display names having unique names to create object type</p>\n","status":"failed","statusMessage":"AssertionError: {\"timestamp\":1733505273,\"object\":\"LIST\",\"status\":\"ERROR\",\"message\":\"error\",\"errors\":[{\"id\":null,\"userId\":null,\"userGroupId\":null,\"type\":\"bad.request\",\"code\":\"E9001\",\"message\":\"A resource with the same unique identifier already exists\",\"errorInfo\":null}]}","statusTrace":"@allure.title(\"This test case is to verify that object type  display names having unique names to create object type\")\n    @allure.description(\"This test case is to verify the object type display names having unique names \"\n                        \"to create object type\")\n    @allure.link(\"https://app.clickup.com/t/85ztqaw70\")\n    @pytest.mark.scenario\n    @pytest.mark.ontology\n    @pytest.mark.object_type_unique_display_names\n    def test_object_types_unique_display_names():\n        login(Env.get_env_data(\"QA_GLOBAL_ADMIN_USERNAME_01\"), Env.get_env_data(\"QA_GLOBAL_ADMIN_PASSWORD_01\"))\n        display_name = generate_string(\"object_type_display_name\")\n        plural_name = generate_string(\"object_type_plural_name\")\n        title_property_display_name = generate_string(\"title_property_display_name\")\n        identifier_property_display_name = generate_string(\"identifier_property_display_name\")\n        response = create_object_types(display_name, plural_name, title_property_display_name,\n                                       identifier_property_display_name)\n        status_200(response)\n        response = create_object_types(display_name, generate_random_string(), generate_random_string(),\n                                       generate_random_string())\n        status_400(response)\n        response = create_object_types(generate_random_string(), plural_name, generate_random_string(),\n                                       generate_random_string())\n>       status_400(response)\n\ntests/scenarios/ontology/test_object_types.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [409]>\nmessage = '{\"timestamp\":1733505273,\"object\":\"LIST\",\"status\":\"ERROR\",\"message\":\"error\",\"errors\":[{\"id\":null,\"userId\":null,\"userGr...\"bad.request\",\"code\":\"E9001\",\"message\":\"A resource with the same unique identifier already exists\",\"errorInfo\":null}]}'\n\n    def status_400(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 400, response.text\nE       AssertionError: {\"timestamp\":1733505273,\"object\":\"LIST\",\"status\":\"ERROR\",\"message\":\"error\",\"errors\":[{\"id\":null,\"userId\":null,\"userGroupId\":null,\"type\":\"bad.request\",\"code\":\"E9001\",\"message\":\"A resource with the same unique identifier already exists\",\"errorInfo\":null}]}\n\nutil/validate_response.py:10: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env_setup","time":{"start":1733490527832,"stop":1733490527832,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"login_fixture","time":{"start":1733490527832,"stop":1733490528079,"duration":247},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733490528079,"stop":1733490528284,"duration":205},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"select_usecase_fixture","time":{"start":1733490528284,"stop":1733490528542,"duration":258},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_to_user_id_mapping","time":{"start":1733490528542,"stop":1733490529001,"duration":459},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"flush_param_counters","time":{"start":1733505272971,"stop":1733505272971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"flush_param_counters::0","time":{"start":1733505273507,"stop":1733505273507,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"object_type_unique_display_names"},{"name":"tag","value":"ontology"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.ontology"},{"name":"suite","value":"test_object_types"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"29333-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.ontology.test_object_types"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"https://app.clickup.com/t/85ztqaw70","url":"https://app.clickup.com/t/85ztqaw70","type":"link"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["object_type_unique_display_names","scenario","ontology"]},"source":"ea02657e3e281a66.json","parameterValues":[]}