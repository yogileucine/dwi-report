{"uid":"76ceb9973aef592b","name":"Test to create job and edit the all cjf parameter values","fullName":"tests.scenarios.job.test_edit_cjf_parameter_values.TestEditCjfparameterValues#test_edit_cjf_parameter_values","historyId":"7edc84495c3aebe8bb7d58b2d1392ca2","time":{"start":1733933649878,"stop":1733933669734,"duration":19856},"description":"This test is to create job and edit the all cjf parameter values","descriptionHtml":"<p>This test is to create job and edit the all cjf parameter values</p>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_edit_cjf_parameter_values.TestEditCjfparameterValues object at 0x78cf7c60fa70>, job_execution_by = 'user', users_list = ['process.publisher.03']\n\n    @allure.title(\"Test to create job and edit the all cjf parameter values\")\n    @allure.description(\"This test is to create job and edit the all cjf parameter values\")\n    @allure.link(\"https://app.clickup.com/t/86cvexgwx\")\n    @pytest.mark.scenario\n    @pytest.mark.job\n    @pytest.mark.edit_cjf_paramter_values\n    @pytest.mark.parametrize(\"job_execution_by, users_list\", [(\"user\", [Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\")]),\n                                                              (\"user_group\", [])])\n    def test_edit_cjf_parameter_values(self, job_execution_by, users_list):\n        process_data = self.process_obj.test_adding_all_parameters_to_create_job_form_and_submit_for_review()\n        login(Env.get_env_data(\"QA_PUBLISHER_USERNAME_01\"), Env.get_env_data(\"QA_PUBLISHER_PASSWORD_01\"))\n        select_facility(const.FACILITY_NAME)\n        select_usecase(const.USECASE_NAME)\n        self.job_obj.create_job(parameters=[\n            {\"label\": process_data[\"single_line_param\"], \"value\": process_data[\"single_line_param\"]},\n            {\"label\": process_data[\"multi_line_param\"], \"value\": process_data[\"multi_line_param\"]},\n            {\"label\": process_data[\"number_param\"], \"value\": \"100\"},\n            {\"label\": process_data[\"single_select_param\"], \"value\": \"monday\"},\n            {\"label\": process_data[\"multi_select_param\"], \"value\": [\"gold\"]},\n            {\"label\": process_data[\"date_param\"], \"value\": \"01-12-2023\"},\n            {\"label\": process_data[\"date_time_param\"], \"value\": \"01-12-2023 13:23\"},\n            {\"label\": process_data[\"single_resource_param\"], \"value\": process_data[\"object_data\"][\"displayName\"]},\n            {\"label\": process_data[\"multi_resource_param\"], \"value\": process_data[\"object_data\"][\"displayName\"]}])\n    \n        data = [\n            {\"label\": process_data[\"single_line_param\"], \"value\": \"updated SLT-value\"},\n            {\"label\": process_data[\"multi_line_param\"], \"value\": \"Updated MLT-value\"},\n            {\"label\": process_data[\"number_param\"], \"value\": \"200\"},\n            {\"label\": process_data[\"single_select_param\"], \"value\": \"sunday\"},\n            {\"label\": process_data[\"multi_select_param\"], \"value\": [\"silver\"]},\n            {\"label\": process_data[\"date_param\"], \"value\": \"11-11-2011\"},\n            {\"label\": process_data[\"date_time_param\"], \"value\": \"11-11-2011 11:11\"},\n            {\"label\": process_data[\"single_resource_param\"], \"value\": process_data[\"object_data\"][\"displayName\"]},\n            {\"label\": process_data[\"multi_resource_param\"], \"value\": process_data[\"object_data\"][\"displayName\"]}]\n>       self.job_obj.edit_cjf_parameters_value(updated_parameter_details=data)\n\ntests/scenarios/job/test_edit_cjf_parameter_values.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/unit/execution/jobs.py:1494: in edit_cjf_parameters_value\n    status_200(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>, message = ''\n\n    def status_200(response, message=None):\n        if message is None:\n            message = response.text\n>       assert response.status_code == 200, message\nE       AssertionError\n\nutil/validate_response.py:4: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":4,"retriesStatusChange":false,"beforeStages":[{"name":"env_setup","time":{"start":1733926201392,"stop":1733926201392,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"login_fixture","time":{"start":1733926201392,"stop":1733926201601,"duration":209},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_facility","time":{"start":1733926201601,"stop":1733926201720,"duration":119},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"select_usecase_fixture","time":{"start":1733926201720,"stop":1733926201814,"duration":94},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_to_user_id_mapping","time":{"start":1733926201814,"stop":1733926202088,"duration":274},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"flush_param_counters","time":{"start":1733933649878,"stop":1733933649878,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"flush_param_counters::0","time":{"start":1733933669756,"stop":1733933669756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"edit_cjf_paramter_values"},{"name":"tag","value":"job"},{"name":"tag","value":"scenario"},{"name":"parentSuite","value":"tests.scenarios.job"},{"name":"suite","value":"test_edit_cjf_parameter_values"},{"name":"subSuite","value":"TestEditCjfparameterValues"},{"name":"host","value":"ubuntu"},{"name":"thread","value":"60865-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenarios.job.test_edit_cjf_parameter_values"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"job_execution_by","value":"'user'"},{"name":"users_list","value":"['process.publisher.03']"}],"links":[{"name":"https://app.clickup.com/t/86cvexgwx","url":"https://app.clickup.com/t/86cvexgwx","type":"link"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c0bebe223519cb5c","status":"failed","statusDetails":"AssertionError","time":{"start":1733920290189,"stop":1733920312227,"duration":22038}},{"uid":"b75764f2082f2e70","status":"failed","statusDetails":"AssertionError","time":{"start":1733918601196,"stop":1733918623401,"duration":22205}},{"uid":"d1046430e6b0fabf","status":"failed","statusDetails":"AssertionError","time":{"start":1733758741022,"stop":1733758761844,"duration":20822}},{"uid":"877bca7168565c86","status":"failed","statusDetails":"AssertionError","time":{"start":1733496497643,"stop":1733496518600,"duration":20957}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["scenario","edit_cjf_paramter_values","job"]},"source":"76ceb9973aef592b.json","parameterValues":["'user'","['process.publisher.03']"]}